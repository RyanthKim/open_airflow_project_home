services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
      TZ: ${TZ}
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U airflow -d airflow"]
      interval: 5s
      retries: 10

  airflow-init:
    build:
      context: .
      dockerfile: Dockerfile
    env_file: .env
    environment:
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    entrypoint: ["/bin/bash", "-c"]
    command:
      - |
        airflow db init
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./airflow_project/dags:/opt/airflow/dags
      - ./airflow_project/tasks:/opt/airflow/tasks
      - ./airflow_project/logs:/opt/airflow/logs
      - ./airflow_project/libs:/opt/airflow/libs
      - ./requirements.txt:/requirements.txt
      - ./google-credentials.json:/opt/airflow/google-credentials.json

  airflow-webserver:
    build:
      context: .
      dockerfile: Dockerfile
    env_file: .env
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      PYTHONPATH: /opt/airflow:/opt/airflow/tasks:/opt/airflow/libs
    command: webserver
    ports: ["8080:8080"]
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./airflow_project/dags:/opt/airflow/dags
      - ./airflow_project/tasks:/opt/airflow/tasks
      - ./airflow_project/logs:/opt/airflow/logs
      - ./airflow_project/libs:/opt/airflow/libs
      - ./requirements.txt:/requirements.txt
      - ./google-credentials.json:/opt/airflow/google-credentials.json

  airflow-scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    env_file: .env
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__DATABASE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      PYTHONPATH: /opt/airflow:/opt/airflow/tasks:/opt/airflow/libs
    command: scheduler
    depends_on:
      postgres:
        condition: service_healthy
      airflow-webserver:
        condition: service_started
    volumes:
      - ./airflow_project/dags:/opt/airflow/dags
      - ./airflow_project/tasks:/opt/airflow/tasks
      - ./airflow_project/logs:/opt/airflow/logs
      - ./airflow_project/libs:/opt/airflow/libs
      - ./requirements.txt:/requirements.txt
      - ./google-credentials.json:/opt/airflow/google-credentials.json

volumes:
  pgdata: